name: Deploy container

on:
  push:
    branches:
      - main
    paths:
      - 'src/Java/Web/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      APP_PATH: './src/Java/Web'

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'microsoft'
          cache: maven
        
      - name: Run the Maven
        run: |
          cd ${{ env.APP_PATH}}
          mvn package
                
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .java-app
          path: ${{ env.APP_PATH }}/target/*.jar

  push:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - uses: actions/checkout@v2

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .java-app
          path: release
        
      - name: Login via Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGINSERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
        
      - name: Docker build
        run: docker build . -t ${{ secrets.REGISTRY_LOGINSERVER }}/app:${{ github.sha }} -f ./.docker/Java/dockerfile

      - name: Docker push
        run: docker push ${{ secrets.REGISTRY_LOGINSERVER }}/app:${{ github.sha }}
  
  deploy:
    runs-on: ubuntu-latest
    needs: push

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
                    
      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n ${{ secrets.AZURE_CONTAINER_APPS }} -g ${{ secrets.RESOURCE_GROUP }} --server ${{ secrets.REGISTRY_LOGINSERVER }} --username  ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }}
            az containerapp update -n ${{ secrets.AZURE_CONTAINER_APPS }} -g ${{ secrets.RESOURCE_GROUP }} --image ${{ secrets.REGISTRY_LOGINSERVER }}/app:${{ github.sha }}
